import time
from Sort import Sort

data = [907, 380, -563, -879, 512, 854, 17, -374, 353, -602, -227, -227, -859, 640, -410, 42, -939, -446, -997, 295,
        383, 440, 152, -655, -112, -262, -326, 315, -246, -787, -248, -278, 553, 574, 374, 781, 158, -372, 500, 767,
        -158, 990, 57, -9, -78, 542, 30, -460, -437, 252, 971, -315, 915, -655, -559, -772, -503, -917, 134, 920,
        71, -919, -290, -891, 18, -841, 907, 510, -196, 694, 699, -674, 954, -592, 979, -318, -529, -759, 279, 224,
        -868, -700, 353, -178, -824, 97, 158, -831, 332, -184, -535, -682, 398, -806, 820, 665, -237, -642, 26,
        -975, -245, 565, 53, -711, -686, 690, -445, 420, 52, 186, -623, -866, 502, 712, 342, -951, -862, -494, 252,
        -848, -943, 296, -922, 330, 874, -64, 472, -753, 191, -385, -765, -343, 810, 677, -787, 448, 463, 922, 900,
        -301, 416, -955, -399, 842, -965, -391, 549, 897, -195, -874, -230, -346, -410, 43, -339, -796, 917, -749,
        322, -71, 425, -580, 43, 92, 837, 684, 563, -856, -746, 197, -775, -327, -303, 403, 130, -413, -188, -759,
        -655, 584, 137, -681, -644, 368, -222, -981, 176, -969, -239, -848, 482, -100, 797, -891, 581, 259, 336,
        -951, -602, -321, 35, -853, 950, 147, -888, 535, 963, 181, -264, 130, 207, 866, -780, 800, -67, 764, -45,
        872, -377, -766, -77, -15, -206, 9, -144, 182, 895, -678, 959, -943, -607, 891, 197, -945, -447, 315, 648,
        488, -964, -109, -122, -474, 709, -655, -574, -849, -630, -743, -267, 827, 831, 972, -310, -839, -813, 794,
        -766, 118, 753, -787, -243, 40, 909, -289, -855, 359, -705, 560, 257, 281, -477, 949, -754, -580, 986, -200,
        726, -359, 927, -893, -525, 418, 788, 753, -554, 292, -517, 269, 914, 116, -972, -610, 39, 782, -858, 222,
        -986, -768, -958, 610, -672, -997, 42, 306, 153, -189, 452, -498, -979, -560, 343, 311, 517, -680, -550,
        492, -515, -881, 132, 679, -675, 812, 64, 349, -82, 540, 993, -263, 29, 207, 122, -30, -554, -104, 573, 644,
        773, 517, 621, -249, -501, 991, 325, -444, -385, 774, 449, 833, 498, -692, 117, 220, 618, 392, -112, -753,
        -166, 837, -171, 106, 411, 917, 256, -150, -655, -494, -384, -595, 200, -551, -186, -215, 888, 954, -615,
        133, 936, -991, -643, -236, -386, 25, 171, 928, 711, -403, 965, -817, 932, 426, 934, -269, -473, -936, -222,
        -915, 459, 683, 980, -592, 961, 603, 54, -179, 817, -436, 886, 794, -546, -177, 340, -187, 413, -361, 728,
        30, 151, -222, -365, -648, 635, -506, 338, 297, -4, 756, -768, 320, 316, 451, 94, 105, -801, -773, -712,
        -115, -345, 163, 40, -429, -632, -805, 727, 796, 107, 522, -395, 391, 480, 664, 886, 609, 854, 591, -507,
        182, 101, -151, -438, 151, 804, 609, 27, -373, -246, -360, 981, 496, 674, 630, -813, 891, 777, -1, 528, 196,
        -319, -773, -445, -971, -892, -888, 334, 943, 922, 713, -217, 920, 738, 505, 250, 302, -956, -957, 673,
        -867, 626, -340, -126, 616, 118, 177, -504, 661, 976, 267, 913, -45, -577, 978, 343, -263, 826, 365, -612,
        -312, 51, -265, 639, 470, 404, -319, 970, -404, 760, 951, -528, 917, -78, -970, -340, -899, -307, -711, 597,
        -157, -338, 120, 122, 445, -311, 368, 307, 373, 471, -102, 873, 722, -236, 381, -680, 986, 983, -583, -150,
        743, 83, 891, 833, -143, 854, -36, -500, 978, 269, -262, 86, 809, 626, -138, 957, -744, -153, -389, -466,
        522, 467, -201, -241, 492, -116, -947, -286, -326, -677, -712, -251, 359, 799, 773, 691, -862, 3, -428, 375,
        -755, -406, 775, 490, -466, 752, 671, 128, 563, -554, -438, -357, 428, -296, 826, -927, 34, -19, -486, 647,
        -952, -581, -400, -25, -627, 900, -800, -764, -484, -767, 529, -842, 604, -131, 589, -714, 720, 868, -879,
        509, 650, 388, 517, -442, -55, 28, -607, 428, -866, -398, -409, -760, -190, -182, 813, 142, -281, -983, 66,
        -516, 157, -486, 984, 142, 469, -669, 952, 276, 640, 48, -91, -595, -206, 645, 765, 728, -381, -743, -649,
        83, 118, -27, -327, -941, 221, -339, 495, -735, 119, 680, 422, 62, 825, 972, 596, 503, 468, -575, 846, 660,
        620, 193, 569, 32, -152, 377, 962, 469, -274, -125, 389, 793, 50, 238, 220, -893, -62, 47, -977, 909, 856,
        346, -705, 589, 722, 165, 961, 527, 21, -597, 156, -186, -237, -11, 531, -874, -698, -15, 990, -509, -470,
        -406, 82, 165, -668, -218, 486, -582, 935, 993, 756, 699, 594, 89, -914, -441, -973, 23, -644, 949, 152,
        -209, -733, -813, -741, 379, 581, -128, -175, -634, 304, 962, 655, -87, 870, 956, -594, 657, 935, 683, 982,
        661, 106, 715, 630, 673, -981, 508, 152, 482, 249, 386, -962, -200, 34, 481, -805, -202, 668, -878, -936,
        -606, -52, 472, -274, -583, 985, -456, 362, 516, -446, -659, -40, -24, -879, 963, 238, -956, -778, -907,
        626, 909, -484, 990, 816, 605, -509, -124, -202, -740, -749, -687, 833, 474, 209, 299, 464, 523, 201, -93,
        -757, -856, -62, -144, 949, -735, 276, 274, 153, -98, 109, 426, 119, 881, -346, -652, -445, 397, -704, 222,
        577, 749, -509, -400, -444, 604, -379, -637, -613, -289, 616, -283, 977, 865, -634, 268, -177, -517, -744,
        -185, 753, -28, -468, -964, -186, 661, -531, 645, -844, 904, 253, 888, -346, -594, 946, 525, 858, -714, -48,
        650, -894, 222, -866, -139, -859, 391, -706, 345, -12, 987, 146, -636, -392, 279, 859, -428, 993, -425, 97,
        -792, -911, 123, -614, -982, -345, -121, -825, 983, 572, -974, -934, 766, -283, -908, -321, 586, -485, -774,
        -272, -147, 795, 7, 574, -628, -334, 854, 779, -489, -11, 850, 105, 495, -12, -446, -142, -281, 330, 625,
        -49, 801, 145, 380, 628, -993, 365, -491, 765, -551, -546, 207, 791, -985, -405, -393, -568, 604, -320,
        -152, 303, -872, 38, 826, -198, 750, -389, -583, 613, -948, 458, -885, 592, 532, 807, 791, 584, -556, 725,
        -549, -463, -537, 17, -203, -314, 780, 931]


def sort(n_elements, exec_times, sortType):
    for i in range(1, len(data) + 1):
        start_time = time.perf_counter()
        s1 = Sort(data[:i], 0, i - 1)
        match sortType:
            case "quickSort":
                s1.quickSort()
            case "mergeSort":
                s1.mergeSort()
            case "heapSort":
                s1.heapSort()
            case "bubbleSort":
                s1.bubbleSort()
        end_time = time.perf_counter()

        # Append number of elements and execution time to their respective lists
        n_elements.append(i)
        exec_times.append(end_time - start_time)

    return n_elements, exec_times
